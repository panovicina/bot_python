import telebot
from telebot import types
import json
import random
import os
from dotenv import load_dotenv


class Catbot:

    NUMBER_OF_PICS: int = 16
    NUMBER_OF_RANDOM_PICS = 7

    def __init__(self):

        load_dotenv()
        self.token = os.getenv('TOKEN')
        self.bot = telebot.TeleBot(self.token, threaded=False)

        # Buttons
        self.button_get_info = types.KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ!")
        self.button_who_am_i = types.KeyboardButton(r'ü§î' + " –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ.. –ö–∞–∫–æ–π —è —Å–µ–≥–æ–¥–Ω—è –∫–æ—Ç–∏–∫?")
        self.button_start = types.KeyboardButton(" –ü–æ–∫–∞–∂–∏ –∫–æ—Ç–∏–∫–∞! ")
        self.button_continue = types.KeyboardButton(" –•–æ—á—É –µ—â—ë –∫–æ—Ç–∏–∫–æ–≤! ")
        self.button_stop = types.KeyboardButton(" –°–ø–∞—Å–∏–±–æ! –•–≤–∞—Ç–∏—Ç! ")

        # Keyboards
        self.keyboard_hello = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.keyboard_hello.add(self.button_get_info, self.button_start)

        self.keyboard_start = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.keyboard_start.add(self.button_who_am_i, self.button_start)

        self.keyboard_continue = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        self.keyboard_continue.add(self.button_continue, self.button_stop, self.button_who_am_i)

    def start_helper(self, message):
        """
        Greeting with user
        :param message: contains info about chat
        :return: None
        """
        start_message = "–ü—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —Ç–µ–±–µ –ø–ª–æ—Ö–æ, —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –∫–æ—Ç–∏–∫–æ–≤. –ê –µ—Å–ª–∏ —Ö–æ—Ä–æ—à–æ, —Ç–æ–∂–µ –ø–æ–∫–∞–∂—É"
        self.bot.send_message(message.chat.id, start_message, reply_markup=self.keyboard_hello)

    def send_kitty(self, message):
        """
        Sends random picture to user
        :param message: contains info about chat
        :return: None
        """
        file = str(random.randint(1, self.NUMBER_OF_RANDOM_PICS)) + '.jpeg'
        photo = 'https://storage.yandexcloud.net/kotiki/' + file
        self.bot.send_photo(message.chat.id, photo, reply_markup=self.keyboard_continue)

    def who_am_i(self, message):
        """
        Interaction with user
        :param message: contains info about chat
        :return: None
        """
        scanning = "–£–ª—ã–±–Ω–∏—Å—å! –ò–¥–µ—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ..."
        result = "–ü–æ–ª—É—á–∏–ª–æ—Å—å! –°–µ–≥–æ–¥–Ω—è —Ç—ã –ø–æ—Ö–æ–∂(–∞) –Ω–∞ —ç—Ç–æ–≥–æ –∫–æ—Ç–∏–∫–∞!"
        self.bot.send_message(message.chat.id, scanning, reply_markup=self.keyboard_continue)
        self.bot.send_message(message.chat.id, result, reply_markup=self.keyboard_continue)
        file = str(random.randint(self.NUMBER_OF_RANDOM_PICS + 1, self.NUMBER_OF_PICS)) + '.jpeg'

        photo = 'https://storage.yandexcloud.net/kotiki/' + file
        self.bot.send_photo(message.chat.id, photo, reply_markup=self.keyboard_continue)

    def get_info(self, message):
        self.bot.send_message(message.chat.id, "–Ø —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–∞–º—ã—Ö –º–∏–ª—ã—Ö –∫–æ—Ç–∏–∫–æ–≤!" + r'üòæ',
                              reply_markup=self.keyboard_hello)
        self.bot.send_message(message.chat.id, "–ù–æ –Ω–µ —Ç–∞–∫–∏—Ö –º–∏–ª—ã—Ö, –∫–∞–∫ —Ç—ã ü•∫",
                              reply_markup=self.keyboard_hello)

    def finish(self, message):
        """Checkout to hello-stage buttons"""
        end_message = '–ü–æ–∫–∞! –î–æ —Å–∫–æ—Ä–æ–≥–æ!'
        self.bot.send_message(message.chat.id, end_message, reply_markup=self.keyboard_hello)

    def reply_all_messages(self, message):
        """
        reply to any unexpected messages
        :param message:
        :return: None
        """
        self.bot.send_message(message.chat.id, "–Ø —É–º–µ—é —Ç–æ–ª—å–∫–æ –∫–æ—Ç–∏–∫–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å " + r'üòæ',
                              reply_markup=self.keyboard_start)
    

cat_bot = Catbot()

def handler(event, context):
    body = json.loads(event['body'])
    update = telebot.types.Update.de_json(body)
    cat_bot.bot.process_new_updates([update])


@cat_bot.bot.message_handler(commands=['start'])
def start(message):
    cat_bot.start_helper(message)


@cat_bot.bot.message_handler(regexp="–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ.. –ö–∞–∫–æ–π —è —Å–µ–≥–æ–¥–Ω—è –∫–æ—Ç–∏–∫?")
def thinker(message):
    cat_bot.who_am_i(message)


@cat_bot.bot.message_handler(regexp="–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ!")
def info(message):
    cat_bot.get_info(message)


@cat_bot.bot.message_handler(regexp="–ü–æ–∫–∞–∂–∏ –∫–æ—Ç–∏–∫–∞!")
def kitty(message):

    cat_bot.send_kitty(message)


@cat_bot.bot.message_handler(regexp="–•–æ—á—É –µ—â—ë –∫–æ—Ç–∏–∫–æ–≤!")
def kitty(message):
    cat_bot.send_kitty(message)


@cat_bot.bot.message_handler(regexp="–°–ø–∞—Å–∏–±–æ! –•–≤–∞—Ç–∏—Ç!")
def bot_finish(message):
    cat_bot.finish(message)


@cat_bot.bot.message_handler(content_types=["text"])
def repeat(message):
    cat_bot.reply_all_messages(message)
